# Workflow for building and testing the web application

name: Web App CI/CD Pipeline
env:
    SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
    SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
    NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
    NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}

on:
    push:
        branches: ['main']
        paths:
            - 'apps/web/**'
            - 'packages/**'
            - 'package.json'
            - 'pnpm-lock.yaml'
            - '.github/workflows/**'
    workflow_dispatch:

permissions:
    contents: read
    pages: write
    id-token: write

concurrency:
    group: 'pages'
    cancel-in-progress: false

defaults:
    run:
        shell: bash
        working-directory: apps/web

jobs:
    build:
        name: Build and Test Web App 
        runs-on: ubuntu-latest
        env:
            SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
            SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
            NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
            NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        steps:
            - name: Checkout 
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 'lts/*'

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: latest
                  run_install: false

            - name: Get pnpm store directory
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ env.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run linter
              working-directory: apps/web
              run: pnpm lint

            - name: Build
              working-directory: apps/web
              run: pnpm build
